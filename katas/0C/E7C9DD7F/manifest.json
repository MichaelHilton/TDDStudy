{"created":[2014,6,25,13,56,41],"id":"0CE7C9DD7F","language":"Clojure-.test","exercise":"100_doors","unit_test_framework":"clojure_test","tab_size":4,"visible_files":{"test_hiker.clj":"\n(ns hiker\n  (:use clojure.test))\n\n(deftest life-the-universe-and-everything\n  (is (= 42 (answer))))\n\n(run-all-tests #\"hiker\")\n","hiker.clj":"(ns hiker)\n\n(defn answer [ ]\n  (* 6 9))\n","cyber-dojo.sh":"CLJ_FILES=`ls *.clj | grep -v 'test' | tr '\\n' ' '`\nTEST_CLJ_FILES=`ls *.clj | grep 'test' | tr '\\n' ' '`\njava -cp ./clojure-1.4.0.jar:. -Dclojure.compile.path=. clojure.main -i $CLJ_FILES $TEST_CLJ_FILES\n","output":"","instructions":"100 doors in a row are all initially closed. You make\n100 passes by the doors. The first time through, you\nvisit every door and toggle the door (if the door is\nclosed, you open it; if it is open, you close it).\nThe second time you only visit every 2nd door (door\n#2, #4, #6, ...). The third time, every 3rd door\n(door #3, #6, #9, ...), etc, until you only visit\nthe 100th door.\n\nQuestion: What state are the doors in after the last\npass? Which are open, which are closed?\n\n[Source http://rosettacode.org]"}}