{"created":[2014,5,31,0,1,42],"id":"0C84864971","language":"Python-unittest","exercise":"Verbal","unit_test_framework":"python_unittest","tab_size":4,"visible_files":{"healthcare.py":"from datetime import date\n\nclass Patient(object):\n    def __init__(self, name, medicines = None):\n        self._medicines = medicines or []\n    \n    def add_medicine(self, medicine):\n        self._medicines.append(medicine)\n    \n    def clash(self, medicine_names, days_back=90):\n        # TODO: write this code!\n        pass\n\nclass Medicine(object):\n    \n    def __init__(self, name):\n        self.name = name\n        self.prescriptions = []\n        \n    def add_prescription(self, prescription):\n        self.prescriptions.append(prescription)\n\n\nclass Prescription(object):\n    \n    def __init__(self, dispense_date=None, days_supply=30):\n        self.dispense_date = dispense_date or date.today()\n        self.days_supply = days_supply\n\n ","test_medicine_clash.py":"import unittest\n\nfrom healthcare import Patient, Medicine, Prescription\n\nclass TestPatient(unittest.TestCase):\n\n    def test_clash(self):\n        patient = Patient(\"Bob\")\n        self.assertEqual([], patient.clash([]))\n\n\nif __name__ == '__main__':\n    unittest.main()\n\n","cyber-dojo.sh":"python *test*.py\n","output":"F\n======================================================================\nFAIL: test_clash (__main__.TestPatient)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_medicine_clash.py\", line 9, in test_clash\n    self.assertEqual([], patient.clash([]))\nAssertionError: [] != None\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nFAILED (failures=1)\n","instructions":"\nAs a Health Insurer,\n\nI want to be able to search for patients who have a medicine clash,\n\nSo that I can alert their doctors and get their prescriptions changed.\n\nSome medicines interact in unfortunate ways when they \nget into your body at the same time, and your doctor isn't always \nalert enough to spot the clash when writing your prescriptions. \n\nFor this Kata, you have a recently discovered medicine clash, \nand you want to look through a database of patient medicine \nand prescription records, to find if any need to be alerted \nto the problem. On the \"Patient\" class, implement the \"clash\" \nmethod. It should return a collection of days on which all the \n\"medicines\" given were being taken during the last \"days_back\" days.\n"}}