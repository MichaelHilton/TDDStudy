{"created":[2013,7,24,7,36,20],"id":"0CF6414B7F","browser":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36","language":"C","exercise":"Unsplice","unit_test_framework":"cassert","tab_size":4,"visible_files":{"untitled.c":"#include \"untitled.h\"\r\n\r\nint hhg(void)\r\n{\r\n    return 42;\r\n}\r\n\r\n","untitled.h":"#ifndef UNTITLED_INCLUDED\n#define UNTITLED_INCLUDED\n\nint hhg(void);\n\n#endif\n\n","makefile":"run.tests.output : run.tests\n\t./run.tests\n\nrun.tests : *.c \n\tgcc -Wall -Werror -O -std=c99 *.c -o run.tests\n","untitled.tests.c":"#include \"untitled.h\"\n#include <assert.h>\n#include <stdio.h>\n\nstatic void example(void)\n{\n    assert(hhg() == 6*9);\n}\n\ntypedef void test(void);\n\nstatic test * tests[ ] =\n{\n    example,\n    (test*)0,\n};\n\nint main(void)\n{\n    size_t at = 0;\n    while (tests[at])\n    {\n        tests[at++]();\n        putchar('.');\n    }\n    printf(\"\\n%zd tests passed\", at);\n    return 0;\n}\n\n","cyber-dojo.sh":"LANG=C\nmake\n","output":"","instructions":"Given a string, strip all occurences of consecutively \noccuring backslash and newline characters. For example, \nassuming that:\n\"\\\\\" represents '\\' and \n\"\\n\" represents '\\n'\n\n  \"ab\\\\\\ncd\\\\\\nef\" --> \"abcdef\" (two stripped out)\n\n  \"abc\\\\\\ndef\"     --> \"abcdef\" (one stripped out)\n\n  \"abc\\n\\\\def\"     --> unchanged (wrong order)\n\n  \"abc\\\\def\"       --> unchanged (no \\n)\n\n  \"abc\\ndef\"       --> unchanged (no \\)\n\n  \"abcdef\"         --> unchanged\n\n\n"}}