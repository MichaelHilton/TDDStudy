{"created":[2014,2,25,6,19,17],"id":"0C55691F8D","language":"C++-GoogleTest","exercise":"Anagrams","unit_test_framework":"google_test","tab_size":4,"visible_files":{"untitled.cpp":"#include \"untitled.hpp\"\n\nint hhg()\n{\n    return 42;\n}\n\n","untitled.tests.cpp":"#include \"untitled.hpp\"\n#include \"gtest/gtest.h\"\n\nusing namespace ::testing;\n\nTEST(UntitledTest, HitchHiker)\n{\n    ASSERT_EQ(6 * 9, hhg());\n}","untitled.hpp":"#ifndef UNTITLED_INCLUDED\n#define UNTITLED_INCLUDED\n\nint hhg();\n\n#endif\n","makefile":"run.tests.output : makefile run.tests\n\t./run.tests\n\nrun.tests : makefile *.cpp *.hpp gtest_main.a\n\tg++ -I. -std=c++11 -Wall -Werror -O -lpthread gtest_main.a *.cpp -o run.tests\n","cyber-dojo.sh":"LANG=c\nmake","output":"","instructions":"Write a program to generate all potential \nanagrams of an input string.\n\nFor example, the potential anagrams of \"biro\" are\n\nbiro bior brio broi boir bori\nibro ibor irbo irob iobr iorb\nrbio rboi ribo riob roib robi\nobir obri oibr oirb orbi orib\n"}}