{"created":[2013,11,6,17,32,7],"id":"0CF40F46DD","browser":"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0; Touch)","language":"C","exercise":"Roman_Numerals","unit_test_framework":"cassert","tab_size":4,"visible_files":{"untitled.c":"#include \"untitled.h\"\r\n\r\nint hhg(void)\r\n{\r\n    return 42;\r\n}\r\n\r\n","untitled.h":"#ifndef UNTITLED_INCLUDED\n#define UNTITLED_INCLUDED\n\nint hhg(void);\n\n#endif\n\n","makefile":"run.tests.output : makefile run.tests\n\t./run.tests\n\nrun.tests : makefile *.c *.h\n\tgcc -Wall -Werror -O -std=c99 *.c -o run.tests\n","untitled.tests.c":"#include \"untitled.h\"\n#include <assert.h>\n#include <stdio.h>\n\nstatic void example(void)\n{\n    assert(hhg() == 6*9);\n}\n\ntypedef void test(void);\n\nstatic test * tests[ ] =\n{\n    example,\n    (test*)0,\n};\n\nint main(void)\n{\n    size_t at = 0;\n    while (tests[at])\n    {\n        tests[at++]();\n        putchar('.');\n    }\n    printf(\"\\n%zd tests passed\", at);\n    return 0;\n}\n\n","cyber-dojo.sh":"LANG=C\nmake\n","output":"","instructions":"Given a positive integer number (eg 42) determine\nits Roman numeral representation as a String (eg \"XLII\").\nThe Roman 'letters' are:\n\n1 ->    \"I\" | 10 ->    \"X\" | 100 ->    \"C\" | 1000 ->    \"M\"\n2 ->   \"II\" | 20 ->   \"XX\" | 200 ->   \"CC\" | 2000 ->   \"MM\"\n3 ->  \"III\" | 30 ->  \"XXX\" | 300 ->  \"CCC\" | 3000 ->  \"MMM\"\n4 ->   \"IV\" | 40 ->   \"XL\" | 400 ->   \"CD\" | 4000 -> \"MMMM\"\n5 ->    \"V\" | 50 ->    \"L\" | 500 ->    \"D\"\n6 ->   \"VI\" | 60 ->   \"LX\" | 600 ->   \"DC\" \n7 ->  \"VII\" | 70 ->  \"LXX\" | 700 ->  \"DCC\" \n8 -> \"VIII\" | 80 -> \"LXXX\" | 800 -> \"DCCC\" \n9 ->   \"IX\" | 90 ->   \"XC\" | 900 ->   \"CM\" \n\nYou cannot write numerals like IM for 999.\nWikipedia states \"Modern Roman numerals are written by\nexpressing each digit separately starting with the\nleftmost digit and skipping any digit with a value of zero.\"\n\nExamples:\no) 1990 -> \"MCMXC\"  (1000 -> \"M\"  + 900 -> \"CM\" + 90 -> \"XC\")\no) 2008 -> \"MMVIII\" (2000 -> \"MM\" +   8 -> \"VIII\")\no)   99 -> \"XCIX\"   (  90 -> \"XC\" +   9 -> \"IX\")\no)   47 -> \"XLVII\"  (  40 -> \"XL\" +   7 -> \"VII\")\n\n"}}